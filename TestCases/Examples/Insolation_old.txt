convSC(a,b)={
    // convert unit spherical coordinates (a,b) to cartesian (x,y,z)
    // (a=+east/-west angle=latitude, b=+north/-south angle =longitude) 
    // into X=toward east, Y=toward north sun, Z=toward sun
    x=cos(b)*sin(a);
    y=sin(b);
    z=cos(b)*cos(a);
    return vec(x,y,z);
}

rotC(v,t)={
    // rotate cartesian vector v=[x,y,z] by angle 't' around x axis toward plane/sun
    // https://en.wikipedia.org/wiki/Rotation_matrix#In_three_dimensions
    x2=v[0];
    y2=v[1]*cos(t)-v[2]*sin(t);
    z2=v[1]*sin(t)+v[2]*cos(t);
    return vec(x2,y2,z2);
}

convCS(v)={
    // convert back cartesian to unit spherical coordinates
    a2=atan2(v[0],v[2]); //  tan(a2)=x/z
    b2=asin(v[1]); // sin(b)=y
    return vec(a2,b2);
}

rotS(a,b,t)={
  v=convSC(a,b);
  v2=rotC(v,t);
  res= convCS(v2);
  return res;
}

// rotate sperical coordinates (a,b) by angle 't' around x axis toward plane/sun
rotSF(a,b,t)={
    // convert unit spherical coordinates (a,b) to cartesian (x,y,z)
    // (a=+east/-west angle=latitude, b=+north/-south angle =longitude) 
    // into X=toward east, Y=toward north sun, Z=toward sun
    x=cos(b)*sin(a);
    y=sin(b);
    z=cos(b)*cos(a);
    // rotate cartesian vector v=[x,y,z] by angle 't' around x axis toward plane/sun
    // https://en.wikipedia.org/wiki/Rotation_matrix#In_three_dimensions
    x2=x;
    y2=y*cos(t)-z*sin(t);
    z2=y*sin(t)+z*cos(t);
    // convert back cartesian to unit spherical coordinates
    a2=atan2(x2,z2); //  tan(a2)=x/z
    b2=asin(y2); // sin(b)=y
    return vec(a2,b2);
}



// insolation at (a,b) earth coord ( assuming sun is toward a=0,b=0), and earth season angle is s (s=0 for winter, s=pi/2 for summer)
insol(a,b,s)={
    // convert unit spherical coordinates (a,b) to cartesian (x,y,z)
    // (a=+east/-west angle=latitude, b=+north/-south angle =longitude) 
    // into X=toward east, Y=toward north sun, Z=toward sun
    x=cos(b)*sin(a);
    y=sin(b);
    z=cos(b)*cos(a);
    // rotate cartesian vector v=[x,y,z] by angle 't' around x axis toward plane/sun
    // https://en.wikipedia.org/wiki/Rotation_matrix#In_three_dimensions
    t= -cos(s)*23.43676'deg'; // earth tilt is 23deg. In winter north is away from sun (-max when x=0), in summer it is toward sun  
    x2=x;
    y2=y*cos(t)-z*sin(t);
    z2=y*sin(t)+z*cos(t);
    // if point is behind earth (from sun), return zero insolation
    if (z2<=0) return 0; 
    // otherwise return cosinus of angle between point and z-axis (which is toward sun)
    // which is same as Z coordinate
    return z2; 
}

// average insolation over one day , at given longitude(b=0 is equator) and season angle (s=0 is winter)
avgInsol(b,s)={
    return integral((a)=> insol(a,b,s),-pi,+pi)/2/pi;
}

insol(pi/2,pi/4,0)
    a=pi/2; b=pi/4; s=0;
    x=cos(b)*sin(a);
    y=sin(b);
    z=cos(b)*cos(a);
    // rotate cartesian vector v=[x,y,z] by angle 't' around x axis toward plane/sun
    // https://en.wikipedia.org/wiki/Rotation_matrix#In_three_dimensions
    t= -cos(s)*23.43676'deg'; // earth tilt is 23deg. In winter north is away from sun (-max when x=0), in summer it is toward sun  
    x2=x;
    y2=y*cos(t)-z*sin(t);
    z2=y*sin(t)+z*cos(t);
    if (z2<=0) return 0;
    integral((a)=> insol(a,b,s),-pi,+pi)/2/pi
    