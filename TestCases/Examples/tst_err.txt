

// nos same as CS equivalent?
calcEX(p,D)= for( ex=0; p1=1; pD=p^D; p1D=1-pD; i=D , i<D+1 , i=i+1){ 
    ex=ex+p1*pD*i ;  
    p1=p1*p1D;
}
calcEX(50%,5) 
ccalcEX(50%,5)


//#C#

// probability to get D in row after N attemps, given p
double csPrv(double p, int D, int N){
  // create initial vector
  var v= new double[D];
  v[0]=1;
  // N times calculate new probability vector
  for (int k=0; k<N; k++){
    double sum= v.Sum();
    for (int i=D-1; i>0; i--) v[i]=v[i-1]*p;
    v[0]=sum*(1-p);
  }
  // get final result from prob vector
  double res=1;
  for (int i=0; i<D; i++) res-=v[i];
  return res;
}

// ** SIMULATION 
int csimEX1(double p,int D){
    var v = new int[D];
    int c = 0;
    while(v.Sum()<D){
        v[c%D]= nm.rnd.NextDouble() <=p?1:0;
        c=c+1;
    }
    return c;
}
double csimEX(double p,int D, int nSim){
    if (nSim<=0) return 0;
    int sum = 0;
    for(int i=0; i<nSim; i++)
        sum+= csimEX1(p,D);
    return sum/(double)nSim;
}

// CALC
double ccalcEX(double p, int D){
    double ex=0, p1=1, pD=Math.Pow(p,D), p1D=1-pD;
    for( int i=D ; i<D+1 ; i=i+1){ 
        ex = ex+ p1*pD*i;
        p1=p1*p1D; 
    }
    return ex;
}

